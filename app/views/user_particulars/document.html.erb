<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document Upload</title>
    <!-- Bootstrap CSS -->
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Style for the file upload wrapper */
        .file-upload-wrapper {
            position: relative;
            width: 100%;
            height: 200px;
            border: 4px dashed #d6d6d6;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #d6d6d6;
            cursor: pointer;
            text-align: center;
            margin-bottom: 20px;
            flex-direction: column;
        }

        /* Hover effect for the file upload wrapper */
        .file-upload-wrapper:hover {
            background-color: #f5f5f5;
        }

        /* Hide the file input field */
        .file-upload-wrapper input[type="file"] {
            display: none;
        }

        /* Style for the text inside the file upload wrapper */
        .file-upload-wrapper span {
            font-size: 20px;
            color: blue;
        }

        /* Style for the dropdown menu */
        .dropdown-menu {
            margin-top: 10px;
        }

        /* Style for the select element with an arrow */
        .form-control.dropdown {
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            position: relative;
            background: url('data:image/svg+xml;utf8,<svg fill="%23333" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M0 0h24v24H0z" fill="none"/><path d="M7 10l5 5 5-5z"/></svg>') no-repeat right 10px center;
            background-size: 16px 16px;
            width: 100%;
            padding-right: 25px; /* Add space for the arrow */
        }

        /* Make the container scrollable */
        body {
            overflow-y: scroll;
        }

        .container {
            max-height: 90vh;
            overflow-y: auto;
            padding-bottom: 20px;
        }

        /* Style for the uploaded files */
        .uploaded-files-container {
            margin-top: 20px;
        }

        .uploaded-file {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            padding: 10px;
            border: 1px solid #eee;
            border-radius: 8px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
        }

        .uploaded-file-details {
            display: flex;
            flex-direction: column;
            margin-bottom: 10px;
        }

        .file-name {
            font-size: 16px;
            margin-bottom: 5px;
        }

        .file-info {
            font-size: 14px;
            color: #666;
        }

        .form-control.dropdown {
            width: 100%;
            margin-bottom: 10px;
        }

        .description-container {
            width: 100%;
            height: 40px;
            margin-bottom: 10px;
        }

        .action-buttons {
            display: flex;
            gap: 10px;
        }

        .action-buttons .btn {
            font-size: 14px;
            padding: 5px 10px;
        }

        .action-buttons .btn-danger {
            background-color: red;
            border-color: red;
        }

        .action-buttons .btn-primary {
            background-color: blue;
            border-color: blue;
        }
    </style>
</head>

<body>
    <div class="container mt-5">
        <div class="alert alert-info text-center" style="font-size: 0.9em;" role="alert">
            <h5 class="alert-heading">Guide</h5>
            <p>To upload your documents, please follow these steps:</p>
            <ol>
                <li>Drag and drop your documents into the designated area or click to select files.</li>
                <li>Once all documents are uploaded, they will appear in the 'Uploaded Documents' section.</li>
                <li>You can preview or delete the uploaded documents from the list.</li>
            </ol>
        </div>
        <div class="upload-section">
            <!-- Form for file upload -->
            <div class="form-section">
                <form id="uploadForm">
                    <!-- File upload wrapper -->
                    <div class="file-upload-wrapper" data-mdb-file-upload-init id="dropArea">
                        <span>Drag and drop your documents below. Supported formats: PDF, DOCX, JPG. Max size: 5MB.</span>
                        <button type="button" class="btn btn-primary mt-2" id="selectDocumentButton">Select Document</button>
                        <input type="file" id="fileInput" multiple>
                    </div>
                </form>

                <!-- Status message -->
                <div id="statusMessage" class="text-center mt-3"></div>
                <!-- List of selected files -->
                <ul id="fileList" class="file-list" style="display: none;"></ul>
                <!-- File preview -->
                <div id="filePreview" class="file-preview"></div>
                <!-- Upload status -->
                <div id="uploadStatus" class="upload-status"></div>
            </div>

            <!-- Uploaded Documents -->
            <div class="uploaded-files-container" id="uploadedDocumentsContainer" style="display: none;">
                <h2 class="text-center">Uploaded Documents</h2>
                <div id="uploadedDocumentsList">
                </div>
            </div>
        </div>
    </div>

    <!-- jQuery, Popper.js, and Bootstrap JS for Bootstrap functionality -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>

    <!-- JavaScript to handle file upload -->
    <script>
        // Variable to store selected files
        let selectedFiles = [];

        // Function to update the file list display
        function updateFileList() {
            var fileListContainer = document.getElementById('fileList');
            fileListContainer.innerHTML = ''; // Clear previous file list
            selectedFiles.forEach(file => {
                var fileItem = document.createElement('li');
                fileItem.classList.add('file-list-item');
                var fileTypeIcon = getFileTypeIcon(file.type);
                fileItem.innerHTML = `<span><img src="${fileTypeIcon}" alt="icon">${file.name} (${formatFileSize(file.size)}) - ${formatDate(new Date())}</span>`;
                fileListContainer.appendChild(fileItem);
            });

            // Show the file list if files are selected
            if (selectedFiles.length > 0) {
                document.getElementById('fileList').style.display = 'block';
            } else {
                document.getElementById('fileList').style.display = 'none';
            }
        }

        // Function to get file type icon
        function getFileTypeIcon(fileType) {
            switch (fileType) {
                case 'application/pdf':
                    return 'https://image.flaticon.com/icons/svg/337/337946.svg';
                case 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':
                    return 'https://image.flaticon.com/icons/svg/337/337932.svg';
                case 'image/jpeg':
                    return 'https://image.flaticon.com/icons/svg/337/337940.svg';
                default:
                    return 'https://image.flaticon.com/icons/svg/137/137932.svg';
            }
        }

        // Function to format file size
        function formatFileSize(bytes) {
            const units = ['bytes', 'KB', 'MB', 'GB', 'TB'];
            let unitIndex = 0;
            let size = bytes;

            // Convert bytes to the largest unit possible
            while (size >= 1024 && unitIndex < units.length - 1) {
                size /= 1024;
                unitIndex++;
            }

            // Return size with two decimal places and unit
            return size.toFixed(2) + ' ' + units[unitIndex];
        }

        // Function to format date to dd/mm/yy
        function formatDate(date) {
            const day = String(date.getDate()).padStart(2, '0');
            const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based
            const year = String(date.getFullYear()).substr(-2);
            return `${day}/${month}/${year}`;
        }

        // Function to remove a file from the list
        function removeFile(fileName) {
            selectedFiles = selectedFiles.filter(file => file.name !== fileName);
            updateFileList();
        }

        // Event listeners for drag and drop functionality
        const dropArea = document.getElementById('dropArea');
        const fileInput = document.getElementById('fileInput');

        dropArea.addEventListener('dragover', (event) => {
            event.preventDefault();
            dropArea.classList.add('hover'); // Add hover effect on dragover
        });

        dropArea.addEventListener('dragleave', () => {
            dropArea.classList.remove('hover'); // Remove hover effect on dragleave
        });

        dropArea.addEventListener('drop', (event) => {
            event.preventDefault();
            dropArea.classList.remove('hover'); // Remove hover effect on drop
            const files = Array.from(event.dataTransfer.files); // Get files from drop event
            handleFiles(files);
        });

        fileInput.addEventListener('change', (event) => {
            const files = Array.from(event.target.files); // Get files from file input
            handleFiles(files);
        });

        // Function to handle files
        function handleFiles(files) {
            let validFiles = [];
            files.forEach(file => {
                if (!['application/pdf', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'image/jpeg'].includes(file.type)) {
                    document.getElementById('statusMessage').innerText = 'Unsupported file type. Please upload a PDF, DOCX, or JPG file.';
                } else if (file.size > 5242880) { // 5MB limit
                    document.getElementById('statusMessage').innerText = 'File size exceeds the maximum limit of 5MB. Please upload a smaller file.';
                } else {
                    selectedFiles.push(file);
                    validFiles.push(file);
                }
            });
            updateFileList(); // Update the file list display
            if (validFiles.length > 0) {
                document.getElementById('statusMessage').innerText = 'Files attached successfully!';
                addUploadedDocumentsToList(validFiles); // Add uploaded documents to the list
            }
        }

        // Event listener for form submission to handle the file upload process
        document.getElementById('uploadForm').addEventListener('submit', function (event) {
            event.preventDefault(); // Prevent default form submission
            if (selectedFiles.length === 0) {
                document.getElementById('statusMessage').innerText = 'Please select files to upload.';
                return;
            }

            var formData = new FormData();
            selectedFiles.forEach(file => {
                formData.append('files[]', file);
            });

            // Create and send an AJAX request to upload the files
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/your_existing_upload_route', true); // Replace with your actual upload route
            xhr.onload = function () {
                if (xhr.status === 200) {
                    document.getElementById('uploadStatus').innerText = 'Files uploaded successfully!';
                    // Add uploaded files to the uploaded documents list
                    addUploadedDocumentsToList(selectedFiles);
                    // Clear selected files after upload
                    selectedFiles = [];
                    updateFileList();
                } else {
                    document.getElementById('uploadStatus').innerText = 'File upload failed! Status: ' + xhr.status + ' Response: ' + xhr.responseText;
                }
            };
            xhr.onerror = function () {
                document.getElementById('uploadStatus').innerText = 'File upload failed due to a network error.';
            };
            xhr.send(formData);
        });

        // Function to add uploaded documents to the list of uploaded documents
        function addUploadedDocumentsToList(files) {
            var uploadedDocumentsList = document.getElementById('uploadedDocumentsList');
            files.forEach(file => {
                if (['application/pdf', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'image/jpeg'].includes(file.type) && file.size <= 5242880) {
                    var listItem = document.createElement('div');
                    listItem.classList.add('uploaded-file');
                    listItem.innerHTML = `
                        <div class="uploaded-file-details">
                            <span class="file-name">${file.name}</span>
                            <span class="file-info">Size: ${formatFileSize(file.size)} Date: ${formatDate(new Date())} Status: Unverified</span>
                            <select class="form-control dropdown">
                                <option value="education">Education</option>
                                <option value="medical">Medical</option>
                                <option value="personal documents">Personal Documents</option>
                                <option value="property">Property</option>
                            </select>
                            <textarea class="form-control description-container" placeholder="Enter Description..."></textarea>
                        </div>
                        <div class="action-buttons">
                            <button class="btn btn-primary btn-sm" onclick="previewDocument('${URL.createObjectURL(file)}')">Preview</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteDocument(this)">Delete</button>
                        </div>
                    `;
                    uploadedDocumentsList.appendChild(listItem);
                }
            });

            // Show or hide the uploaded documents section based on the number of files
            if (uploadedDocumentsList.children.length > 0) {
                document.getElementById('uploadedDocumentsContainer').style.display = 'block';
            } else {
                document.getElementById('uploadedDocumentsContainer').style.display = 'none';
            }
        }

        // Function to delete a document
        function deleteDocument(button) {
            var listItem = button.closest('.uploaded-file');
            var fileName = listItem.querySelector('.file-name').innerText;
            removeFile(fileName);
            listItem.remove();

            // Check if there are remaining files and update the display accordingly
            if (document.getElementById('uploadedDocumentsList').children.length === 0) {
                document.getElementById('uploadedDocumentsContainer').style.display = 'none';
            }
        }

        // Function to preview a document in a new tab
        function previewDocument(fileUrl) {
            window.open(fileUrl, '_blank');
        }

        // Event listener for "Select Document" button
        document.getElementById('selectDocumentButton').addEventListener('click', function () {
            fileInput.click();
        });
    </script>
</body>

</html>
