<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Upload UI</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .guide {
            background-color: #f8d7da;
            color: #721c24;
            border-color: #f5c6cb;
            padding: 20px;
            margin-bottom: 20px;
            border: 1px solid transparent;
            border-radius: 4px;
        }
        .upload-container {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            padding: 20px;
        }
        .upload-box {
            width: 48%;
            padding: 20px;
            border: 2px dashed #d9e3f0;
            border-radius: 4px;
            text-align: center;
        }
        .upload-box .icon {
            font-size: 50px;
            margin-bottom: 20px;
        }
        .upload-box p {
            margin: 10px 0;
        }
        .uploaded-files {
            width: 48%;
        }
        .uploaded-files ul {
            list-style-type: none;
            padding: 0;
        }
        .uploaded-files li {
            background-color: #f1f1f1;
            margin-bottom: 10px;
            padding: 10px;
            border-radius: 4px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .uploaded-files .file-info {
            display: flex;
            flex-direction: column;
        }
        .uploaded-files .file-description,
        .uploaded-files .file-type {
            margin-top: 10px;
        }
        .uploaded-files .file-description input {
            width: 100%;
            padding: 5px;
        }
        .uploaded-files .file-type select {
            width: 100%;
            padding: 5px;
        }
        .file-info {
            display: flex;
            flex-direction: column;
        }
        .preview-btn, .delete-btn {
            cursor: pointer;
            margin-left: 10px;
        }
    </style>
</head>
<body>
    <div class="guide">
        <h2>File Upload Guide</h2>
        <p>Follow the instructions below to upload your documents:</p>
        <ol>
            <li>Drag and drop your files into the designated area or click the "Browse" button to select files from your computer.</li>
            <li>Supported file formats are PDF, DOC, DOCX, and JPG.</li>
            <li>The maximum file size allowed is 5MB.</li>
            <li>After selecting the files, they will be automatically uploaded and listed on the right side.</li>
            <li>You can remove any file by clicking the delete button (üóëÔ∏è) next to the file name.</li>
        </ol>
    </div>

    <div class="upload-container">
        <div class="upload-box" id="uploadBox">
            <div class="icon">‚¨ÜÔ∏è</div>
            <p>Drag and Drop files to upload or</p>
            <button id="browseBtn">Browse</button>
            <p>Supported files: PDF, DOC, DOCX, JPG</p>
            <input type="file" id="fileInput" multiple style="display: none;">
        </div>
        <div class="uploaded-files">
            <ul id="fileList">
                <p id="noFilesMessage">No files uploaded yet.</p>
            </ul>
        </div>
    </div>

    <script>
        const uploadBox = document.getElementById('uploadBox');
        const fileInput = document.getElementById('fileInput');
        const browseBtn = document.getElementById('browseBtn');
        const fileList = document.getElementById('fileList');
        const noFilesMessage = document.getElementById('noFilesMessage');

        const supportedFormats = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'image/jpeg'];
        const maxFileSize = 5 * 1024 * 1024; // 5MB in bytes

        const userParticularId = 1; // Replace this with the dynamic user_particular_id if needed

        document.addEventListener('DOMContentLoaded', fetchFiles);

        browseBtn.addEventListener('click', () => {
            fileInput.click();
        });

        fileInput.addEventListener('change', (event) => {
            handleFiles(event.target.files);
        });

        uploadBox.addEventListener('dragover', (event) => {
            event.preventDefault();
            uploadBox.style.borderColor = '#42a5f5';
        });

        uploadBox.addEventListener('dragleave', () => {
            uploadBox.style.borderColor = '#d9e3f0';
        });

        uploadBox.addEventListener('drop', (event) => {
            event.preventDefault();
            uploadBox.style.borderColor = '#d9e3f0';
            const files = event.dataTransfer.files;
            handleFiles(files);
        });

        function handleFiles(files) {
            for (const file of files) {
                if (supportedFormats.includes(file.type)) {
                    if (file.size <= maxFileSize) {
                        uploadFile(file);
                    } else {
                        alert('File size exceeds 5MB limit');
                    }
                } else {
                    alert('Unsupported file format');
                }
            }
        }

        function addFileToList(file) {
            const listItem = document.createElement('li');
            listItem.innerHTML = `
                <div class="file-info">
                    <div class="file-name">
                        ${file.name}
                    </div>
                    <div class="file-size">${formatFileSize(file.file_size)}</div>
                    <div class="upload-date">${file.upload_date}</div>
                    <div class="status">${file.status}</div>
                    <div class="preview-btn" data-url="${file.file_url}">üîç</div>
                    <div class="delete-btn" data-id="${file.id}">üóëÔ∏è</div>
                </div>
                <div class="file-description">
                    <input type="text" placeholder="Enter your description" class="description" data-id="${file.id}" value="${file.description || 'Enter your description'}">
                </div>
                <div class="file-type">
                    <select class="document-type" data-id="${file.id}">
                        <option value="Education" ${file.document_type === 'Education' ? 'selected' : ''}>Education</option>
                        <option value="Medical" ${file.document_type === 'Medical' ? 'selected' : ''}>Medical</option>
                        <option value="Personal Documents" ${file.document_type === 'Personal Documents' ? 'selected' : ''}>Personal Documents</option>
                        <option value="Property" ${file.document_type === 'Property' ? 'selected' : ''}>Property</option>
                    </select>
                </div>
            `;
            if (noFilesMessage) {
                noFilesMessage.remove();
            }
            fileList.appendChild(listItem);
            attachUpdateEventHandlers();
        }

        function fetchFiles() {
            fetch(`/user_particulars/${userParticularId}/uploaded_files`)
                .then(response => response.json())
                .then(files => {
                    files.forEach(file => addFileToList(file));
                })
                .catch(error => console.error('Error:', error));
        }

        function formatFileSize(bytes) {
            const units = ['bytes', 'KB', 'MB', 'GB', 'TB'];
            let unitIndex = 0;
            let fileSize = bytes;
            while (fileSize >= 1024 && unitIndex < units.length - 1) {
                fileSize /= 1024;
                unitIndex++;
            }
            return fileSize.toFixed(2) + ' ' + units[unitIndex];
        }

        function uploadFile(file) {
            const formData = new FormData();
            formData.append('uploaded_file[file_path]', file);
            formData.append('uploaded_file[name]', file.name);
            formData.append('uploaded_file[file_type]', file.type);
            formData.append('uploaded_file[file_size]', file.size);
            formData.append('uploaded_file[status]', 'Unverified');
            formData.append('uploaded_file[document_type]', 'Education');
            formData.append('uploaded_file[description]', 'Enter your description');

            fetch(`/user_particulars/${userParticularId}/uploaded_files`, {
                method: 'POST',
                headers: {
                    'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                },
                body: formData
            })
            .then(response => response.json())
            .then(file => {
                if (!file.success) {
                    alert('Failed to upload file');
                } else {
                    addFileToList(file.file);
                }
            })
            .catch(error => console.error('Error:', error));
        }

        function attachUpdateEventHandlers() {
            document.querySelectorAll('.description').forEach(element => {
                element.addEventListener('blur', (event) => {
                    updateFileDescription(event.target.dataset.id, event.target.value);
                });
            });

            document.querySelectorAll('.document-type').forEach(element => {
                element.addEventListener('change', (event) => {
                    updateFileType(event.target.dataset.id, event.target.value);
                });
            });

            document.querySelectorAll('.delete-btn').forEach(element => {
                element.addEventListener('click', (event) => {
                    removeFile(event.target);
                });
            });

            document.querySelectorAll('.preview-btn').forEach(element => {
                element.addEventListener('click', (event) => {
                    previewFile(event.target.dataset.url);
                });
            });
        }

        function updateFileDescription(fileId, description) {
            fetch(`/user_particulars/${userParticularId}/uploaded_files/${fileId}`, {
                method: 'PATCH',
                headers: {
                    'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ uploaded_file: { description } })
            })
            .then(response => {
                if (!response.ok) {
                    alert('Failed to update file description');
                }
            })
            .catch(error => console.error('Error:', error));
        }

        function updateFileType(fileId, document_type) {
            fetch(`/user_particulars/${userParticularId}/uploaded_files/${fileId}`, {
                method: 'PATCH',
                headers: {
                    'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ uploaded_file: { document_type } })
            })
            .then(response => {
                if (!response.ok) {
                    alert('Failed to update file type');
                }
            })
            .catch(error => console.error('Error:', error));
        }

        function removeFile(element) {
            const listItem = element.parentElement.parentElement;
            const fileId = element.getAttribute('data-id');

            fetch(`/user_particulars/${userParticularId}/uploaded_files/${fileId}`, {
                method: 'DELETE',
                headers: {
                    'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                }
            })
            .then(response => {
                if (response.ok) {
                    listItem.remove();
                    if (!fileList.querySelector('li')) {
                        fileList.innerHTML = '<p id="noFilesMessage">No files uploaded yet.</p>';
                    }
                } else {
                    alert('Failed to delete file');
                }
            })
            .catch(error => console.error('Error:', error));
        }

        function previewFile(url) {
            window.open(url, '_blank');
        }
    </script>
</body>
</html>
